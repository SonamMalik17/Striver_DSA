#include <bits/stdc++.h> 
int getLongestSubarray(vector<int>& a, int k){
    // TC : O(N*LogN) in case of ordered map and 
    // O(N) for best,average unordered map , O(N^2) for worst unordered map

    // SC : O(N)
    map<long long, int> preSumMap;
    long long sum=0;
    int maxLen=0;
    for(int i=0;i<a.size();i++)
    {
        sum+=a[i];
        if(sum==k)
            maxLen=max(maxLen,i+1);
        long long rem=sum-k;
        if(preSumMap.find(rem)!=preSumMap.end())
        {
            int len=i-preSumMap[rem];
            maxLen=max(maxLen,len);
        }
        if(preSumMap.find(sum)==preSumMap.end())
            preSumMap[sum]=i;
    }
    return maxLen;
}