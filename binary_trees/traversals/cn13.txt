#include<bits/stdc++.h>
/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/

// stack
vector<vector<int>> getTreeTraversal(TreeNode *root) {
    vector<vector<int>> ans;
    stack<pair<TreeNode*,int>> st;
    st.push({root, 1});
    vector<int> preorder,inorder,postorder;
    while(!st.empty())
    {
        TreeNode* temp;
        if(st.top().second==1)
        {
            temp=st.top().first;
            preorder.push_back(temp->data);
            ++st.top().second;
            if(temp->left)
              st.push(make_pair(temp->left, 1));
        }
        else if(st.top().second==2)
        {
            temp=st.top().first;
            inorder.push_back(temp->data);
            ++st.top().second;
            if(temp->right)
              st.push(make_pair(temp->right, 1));
        }
        else
        {
            temp=st.top().first;
            postorder.push_back(temp->data);
            st.pop();
        }
    }
    ans.push_back(inorder);
    ans.push_back(preorder);
    ans.push_back(postorder);
    return ans;
}