/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
vector<int> postorderTraversal(TreeNode *root)
{
    // iterative 2 Stack
    vector<int> ans;
    if(root==NULL)
        return ans;
    stack<TreeNode*> st1,st2;
    st1.push(root);
    while(!st1.empty())
    {
        TreeNode* temp=st1.top();
        st1.pop();
        st2.push(temp);
        if(temp->left)
            st1.push(temp->left);
        if(temp->right)
        st1.push(temp->right);
    }
    while(!st2.empty())
    {
        TreeNode* tem=st2.top();
        st2.pop();
        ans.push_back(tem->data);
    }
    return ans;
}