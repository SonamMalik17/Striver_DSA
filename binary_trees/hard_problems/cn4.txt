// Coding Ninjas 
/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *left, *right;
    Node()
    {
        this->data = 0;
        left = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->left = NULL;
        this->right = NULL;
    }
    Node(int data, Node* left, Node* right)
    {
        this->data = data;
        this->left = left;
        this->right = right;
    }
};
*/
bool isParentSum(Node *root){
    // Write your code here.
    if(!root)
        return true;
    if (!root->left && !root->right)
        return true;
    int sum=0;
    if(root->left)
        sum+=root->left->data;
    if(root->right)
        sum+=root->right->data;
    if(sum!=root->data)
        return false;
    return isParentSum(root->left) && isParentSum(root->right);
}

// Striver told
class Solution{
    void changeTree(BinaryTreeNode<int>* root){
        if(!root)
            return;
        int child=0;
        if(root->left)
            child+=root->left->data;
        if(root->right)
            child+=root->right->data;
        if(child>=root->data)
            root->data=child;
        else
        {
            if(root->left)
                root->left->data=root->data;
            else if(root->right)
                root->right->data=root->data;
        }
        changeTree(root->left);
        changeTree(root->right);
        int tot=0;
        if(root->left)
            tot+=root->left->data;
        if(root->right)
            tot+=root->right->data;
        if(root->left || root->right)
            root->data=tot;
    }
};