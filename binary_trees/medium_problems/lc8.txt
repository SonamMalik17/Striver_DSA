/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> res;
        queue<pair<TreeNode*,pair<int,int>>> q;
        map<int,map<int,multiset<int>>> mp;
        q.push({root,{0,0}});
        while(!q.empty())
        {
            TreeNode* temp=q.front().first;
            int vertical=q.front().second.first;
            int level=q.front().second.second;
            q.pop();
            mp[vertical][level].insert(temp->val); 
            if(temp->left)
                q.push({temp->left,{vertical-1,level+1}});
            if(temp->right)
                q.push({temp->right,{vertical+1,level+1}});
        }
        for(auto i:mp)
        {
            vector<int> col;
            for(auto j:i.second)
                col.insert(col.end(),j.second.begin(),j.second.end());
            res.push_back(col);
        }
        return res;
    }
};