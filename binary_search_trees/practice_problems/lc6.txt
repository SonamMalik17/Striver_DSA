/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        bool b=true;
        bool first=true;
        int prev;
        TreeNode* curr=root;
        while(curr)
        {
            if(curr->left==NULL)
            {
                if(first)
                {
                    prev=curr->val;
                    first=false;
                }
                else
                {
                    if(curr->val<=prev)
                        b=false;
                    else
                        prev=curr->val;
                }
                curr=curr->right;
            }
            else
            {
                TreeNode* tmp=curr->left;
                while(tmp->right && tmp->right!=curr)
                    tmp=tmp->right;
                if(tmp->right==NULL)
                {
                    tmp->right=curr;
                    curr=curr->left;
                }
                else
                {
                    if(curr->val<=prev)
                        b=false;
                    else
                        prev=curr->val;
                    tmp->right=NULL;
                    curr=curr->right;
                }
            }
        }
        if(b)
            return true;
        return false;
    }
};