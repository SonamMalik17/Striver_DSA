/*************************************************************

    Following is the Binary Tree node structure
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*************************************************************/
TreeNode* build(vector<int>& a,int& i,int bound)
{
    if(i==a.size() || a[i]>bound)
        return NULL;
    TreeNode* root=new TreeNode(a[i++]);
    root->left=build(a,i,root->data);
    root->right=build(a,i,bound);
    return root;
}
TreeNode *preOrderTree(vector<int> &a)
{
    // Write your code here.
    int i=0;
    return build(a,i,INT_MAX);
}