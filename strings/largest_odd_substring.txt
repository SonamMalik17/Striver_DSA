// GFG Solution
class Solution {
public:
    string reverseWords(string s) {
        stack<string> st;
        int n=s.length();
        for(int i=0;i<n;i++)
        {
            if(s[i]==' ')
                continue;
            else
            {
                string a="";
                while(i<n && s[i]!=' ')
                {
                    a+=s[i];
                    ++i;
                }
                st.push(a);
            }
        }
        string ans="";
        while(!st.empty())
        {
            ans+=st.top();
            ans+=" ";
            st.pop();
        }
        ans=ans.substr(0,ans.size()-1);
        return ans;
    }
};

// LC Solution
class Solution {
public:
    string largestOddNumber(string s) {
        int n=s.length();
        for(int i=n-1;i>=0;i--)
        {
            if((s[i]-'0')%2==0)
                s.pop_back();
            else 
                break;
        }
        return s;
    }
};