int sumSubarrayMins(vector<int>&arr) {
    // Write your code here.
    int mod=1e9 +7;
    int i,n=arr.size();
    stack<pair<int,int>> st1,st2;
    int sum=0;
    vector<int> left(n),right(n);
    for(i=0;i<n;i++)
    {
        left[i]=i+1;
        right[i]=n-i;
    }
    for(i=0;i<n;i++)
    {
        while(!st1.empty() && st1.top().first>arr[i])
            st1.pop();
        if(!st1.empty())
            left[i]=i-st1.top().second;
        st1.push({arr[i],i});
        
        while(!st2.empty() && st2.top().first>arr[i])
        {
            auto x=st2.top();
            st2.pop();
            right[x.second]=i-x.second;
        } 
        st2.push({arr[i],i});
    }
    for(i=0;i<n;i++)
        sum=(sum+(1LL*arr[i]*left[i]*right[i]))%mod;
    return sum;
}