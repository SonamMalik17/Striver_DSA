class Queue {
    // Define the data members(if any) here.
    
    public:
    stack<int> input,output;
    int ele;
    Queue() {
        // Initialize your data structure here.
    }

    void enQueue(int x) {
        // Implement the enqueue() function.
        input.push(x);
    }

    int deQueue() {
        // Implement the dequeue() function.
        if(output.empty() && input.empty())
            return -1;
        else if(!output.empty())
        {
            ele=output.top();
            output.pop();
            return ele;
        }
        else
        {
            while(!input.empty())
            {
                output.push(input.top());
                input.pop();
            }
            ele=output.top();
            output.pop();
            return ele;
        }
    }

    int peek() {
        // Implement the peek() function here.
        if(output.empty() && input.empty())
            return -1;
        else if(!output.empty())
            return output.top();
        else
        {
            while(!input.empty())
            {
                output.push(input.top());
                input.pop();
            }
            return output.top();
        }
    }

    bool isEmpty() {
        // Implement the isEmpty() function here.
        if(output.empty() && input.empty())
            return true;
        return false;
    }
};