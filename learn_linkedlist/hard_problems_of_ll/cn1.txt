/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node* kReverse(Node* head, int k) {
    // Write your code here.
    if(k==1) 
        return head;
    int count=0;
    Node* temp=head;
    while(temp!=NULL)
    {
        ++count;
        temp=temp->next;
    }
    Node* pre=new Node();
    Node* dummy=pre;
    pre->next=head;
    Node* curr=head;
    Node* nex=curr->next; 
    int i;
    while(count>=k)
    {
        curr=pre->next;
        nex=curr->next;
        for(i=0;i<k-1;i++)
        {
            curr->next=nex->next;
            nex->next=pre->next;
            pre->next=nex;
            nex=curr->next;
        }
        count-=k;
        pre=curr;
    }
    return dummy->next;
}