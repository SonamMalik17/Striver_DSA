/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(k==1) 
            return head;
        int count=0;
        ListNode* temp=head;
        while(temp!=NULL)
        {
            ++count;
            temp=temp->next;
        }
        ListNode* pre=new ListNode();
        ListNode* dummy=pre;
        pre->next=head;
        ListNode* curr=head;
        ListNode* nex=curr->next; 
        int i;
        while(count>=k)
        {
            curr=pre->next;
            nex=curr->next;
            for(i=0;i<k-1;i++)
            {
                curr->next=nex->next;
                nex->next=pre->next;
                pre->next=nex;
                nex=curr->next;
            }
            count-=k;
            pre=curr;
        }
        return dummy->next;
    }
};