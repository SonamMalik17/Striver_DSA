/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL)
            return head;
        Node* it=head;
        while(it)
        {
            Node* tem=new Node(it->val);
            tem->next=it->next;
            it->next=tem;
            it=tem->next;
        }
        it=head;
        while(it)
        {
            if(it->random)
                it->next->random=it->random->next;
            else
                it->next->random=NULL;
            it=it->next->next;
        }
        Node* res=new Node(INT_MAX);
        Node* temp=res;
        it=head;
        while(it)
        {
            Node* front=it->next->next;
            temp->next=it->next;
            temp=temp->next;
            it->next=front;
            it=it->next;
        }
        return res->next;
    }
};