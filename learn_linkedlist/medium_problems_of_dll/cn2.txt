/**
 * Definition of doubly linked list:
 * class Node {
 * public:
 *      int data;
 *      Node *prev;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next, Node *prev) {
 *          this -> data = data;
 *          this -> prev = prev;
 *          this -> next = next;
 *      }
 * };
 *
 *************************************************************************/

vector<pair<int, int>> findPairs(Node* head, int k)
{
    // Write your code here.
    vector<pair<int,int>> v;
    Node* l=head;
    Node* r=head;
    while(r->next)
        r=r->next;
    while(l!=r && r->next!=l)
    {
        int sum=l->data + r->data;
        if(sum==k)
        {
            v.push_back({l->data,r->data});
            l=l->next;
            r=r->prev;
        }
        else if(sum>k)
            r=r->prev;
        else
            l=l->next;
    }
    return v;
}
