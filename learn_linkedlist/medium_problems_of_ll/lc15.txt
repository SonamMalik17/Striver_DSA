/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry=0;
        int sum;
        ListNode* res=new ListNode();
        ListNode* temp=res;
        ListNode* temp1=l1;
        ListNode* temp2=l2;
        while(temp1!=NULL && temp2!=NULL)
        {
            sum=carry+temp1->val+temp2->val;
            carry=(sum>=10)? 1:0;
            sum=sum%10;
            temp->next=new ListNode(sum);
            temp=temp->next;
            temp1=temp1->next;
            temp2=temp2->next;
        }
        while(temp1!=NULL)
        {
            sum=carry+temp1->val;
            carry=(sum>=10)? 1:0;
            sum=sum%10;
            temp->next=new ListNode(sum);
            temp=temp->next;
            temp1=temp1->next;
        }
        while(temp2!=NULL)
        {
            sum=carry+temp2->val;
            carry=(sum>=10)? 1:0;
            sum=sum%10;
            temp->next=new ListNode(sum);
            temp=temp->next;
            temp2=temp2->next;
        }
        if(carry)
            temp->next=new ListNode(carry);
        res=res->next;
        return res;
    }
};