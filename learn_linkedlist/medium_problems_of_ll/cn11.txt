/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *next;
    Node()
    {
        this->data = 0;
        next = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->next = NULL;
    }
    Node(int data, Node* next)
    {
        this->data = data;
        this->next = next;
    }
};
*/
Node* findMid(Node* head)
{
    Node* slow=head;
    Node* fast=head->next;
    while(fast!=NULL && fast->next!=NULL)
    {
        slow=slow->next;
        fast=fast->next->next;
    }
    return slow;
}
Node* merge(Node* left,Node* right)
{
    Node* ans=new Node();
    Node* dummy=ans;
    if(left==NULL)
        return right;
    else if(right==NULL)
        return left;
    else
    {
        while(left!=NULL && right!=NULL)
        {
            if(left->data<right->data)
            {
                dummy->next=left;
                dummy=left;
                left=left->next;
            }
            else
            {
                dummy->next=right;
                dummy=right;
                right=right->next;
            }
        }
        while(left!=NULL)
        {
            dummy->next=left;
            dummy=left;
            left=left->next;
        }
        while(right!=NULL)
        {
            dummy->next=right;
            dummy=right;
            right=right->next;
        }
    }
    ans=ans->next;
    return ans;
}
Node* sortList(Node* head){
    // Write your code here.
    if(head==NULL || head->next==NULL)
            return head;
        Node* mid=findMid(head);
        Node* left=head;
        Node* right=mid->next;
        mid->next=NULL;
        left=sortList(left);
        right=sortList(right);
        Node* result=merge(left,right);
        return result;
}
