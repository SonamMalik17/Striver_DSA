/**
 * Definition of linked list:
 *
 * class Node {
 * public:
 *      int data;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next) {
 *          this->data = data;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node *addTwoNumbers(Node *l1, Node *l2)
{
    // Write your code here.
    int carry=0;
    int sum;
    Node* res=new Node();
    Node* temp=res;
    Node* temp1=l1;
    Node* temp2=l2;
    while(temp1!=NULL && temp2!=NULL)
    {
        sum=carry+temp1->data+temp2->data;
        carry=(sum>=10)? 1:0;
        sum=sum%10;
        temp->next=new Node(sum);
        temp=temp->next;
        temp1=temp1->next;
        temp2=temp2->next;
    }
    while(temp1!=NULL)
    {
        sum=carry+temp1->data;
        carry=(sum>=10)? 1:0;
        sum=sum%10;
        temp->next=new Node(sum);
        temp=temp->next;
        temp1=temp1->next;
    }
    while(temp2!=NULL)
    {
        sum=carry+temp2->data;
        carry=(sum>=10)? 1:0;
        sum=sum%10;
        temp->next=new Node(sum);
        temp=temp->next;
        temp2=temp2->next;
    }
    if(carry)
        temp->next=new Node(carry);
    res=res->next;
    return res;
}
